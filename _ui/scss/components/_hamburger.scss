/* ==========================================================================
COMPONENTS/_HAMBURGER.SCSS
========================================================================== */

// Settings
// ==================================================
$hamburger-padding-x                       : $space !default;
$hamburger-padding-y                       : $space !default;
$hamburger-layer-width                     : 20px !default;
$hamburger-layer-height                    : 2px !default;
$hamburger-layer-spacing                   : 4px !default;

$hamburger-layer-width-large               : 30px !default;
$hamburger-layer-height-large              : 3px !default;
$hamburger-layer-spacing-large             : 5px !default;

$hamburger-layer-color                     : $navy !default;
$hamburger-layer-border-radius             : 0px !default;
$hamburger-hover-opacity                   : 1 !default;
$hamburger-hover-transition-duration       : 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter: opacity(70%) !default;


.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  display: inline-block;
  cursor: pointer;
  
  // transition-property: opacity, filter;
  // transition-duration: $hamburger-hover-transition-duration;
  // transition-timing-function: $hamburger-hover-transition-timing-function;
  
  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;
  
  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition: transform 0.15s ease-out,
    background-color 250ms ease-out;
  }
  
  &::before,
  &::after {
    content: "";
    display: block;
  }
  
  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
  
  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}



.hamburger--spin {
  .hamburger-inner {
    background-color: $hamburger-layer-color;
    transition: transform 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19) ease-out,
    background-color 250ms ease-out 0;
    
    &::before {
      transition: top 0.1s 0.34s ease-in,
      opacity 0.1s ease-in,
      background-color 250ms ease-out 0;
    }
    
    &::after {
      transition: bottom 0.1s 0.34s ease-in,
      transform 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19),
      background-color 250ms ease-out 0;
    }
  }
  
  &.is-active {
    .hamburger-inner {
      background-color: $white;
      transform: rotate(225deg);
      transition: transform 0.3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.14s,
      background-color 250ms ease-out 0;
      
      &::before {
        top: 0;
        opacity: 0;
        transition: top 0.1s ease-out,
        opacity 0.1s 0.14s ease-out,
        background-color 250ms ease-out 0;
        
      }
      
      &::after {
        background-color: $white;
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 0.1s ease-out,
        transform 0.3s 0.14s cubic-bezier(0.215, 0.61, 0.355, 1),
        background-color 250ms ease-out 0;
        
      }
    }
  }
}



.hamburger.hamburger--spin {
  &:hover,
  &:focus {
    outline: 0;
    background-color: transparent;
    
    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $aqua;
    }
  }
}

@media screen and (min-width: $bp-large) {
  .hamburger-box {
    width: $hamburger-layer-width-large;
    height: $hamburger-layer-height-large * 3 + $hamburger-layer-spacing-large * 2;
  }
  .hamburger-inner {
    margin-top: $hamburger-layer-height-large / -2;
    
    &,
    &::before,
    &::after {
      width: $hamburger-layer-width-large;
      height: $hamburger-layer-height-large;
    }
    
    &::before {
      top: ($hamburger-layer-spacing-large + $hamburger-layer-height-large) * -1;
    }
    
    &::after {
      bottom: ($hamburger-layer-spacing-large + $hamburger-layer-height-large) * -1;
    }  
  }  
}